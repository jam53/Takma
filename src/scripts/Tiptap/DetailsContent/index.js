import{Node as t,mergeAttributes as e,findParentNode as n,defaultBlockAt as r}from"@tiptap/core";import{Selection as o}from"@tiptap/pm/state";const i=t.create({name:"detailsContent",content:"block+",defining:!0,selectable:!1,addOptions:()=>({HTMLAttributes:{}}),parseHTML(){return[{tag:`div[data-type="${this.name}"]`}]},renderHTML({HTMLAttributes:t}){return["div",e(this.options.HTMLAttributes,t,{"data-type":this.name}),0]},addNodeView(){return({HTMLAttributes:t})=>{const n=document.createElement("div"),r=e(this.options.HTMLAttributes,t,{"data-type":this.name,hidden:"hidden"});return Object.entries(r).forEach((([t,e])=>n.setAttribute(t,e))),n.addEventListener("toggleDetailsContent",(()=>{n.toggleAttribute("hidden")})),{dom:n,contentDOM:n,ignoreMutation:t=>"selection"!==t.type&&(!n.contains(t.target)||n===t.target),update:t=>t.type===this.type}}},addKeyboardShortcuts(){return{Enter:({editor:t})=>{const{state:e,view:i}=t,{selection:d}=e,{$from:s,empty:a}=d,c=n((t=>t.type===this.type))(d);if(!a||!c||!c.node.childCount)return!1;const p=s.index(c.depth),{childCount:l}=c.node;if(!(l===p+1))return!1;const u=c.node.type.contentMatch.defaultType,h=null==u?void 0:u.createAndFill();if(!h)return!1;const f=e.doc.resolve(c.pos+1),m=l-1,y=c.node.child(m),A=f.posAtIndex(m,c.depth);if(!y.eq(h))return!1;const b=s.node(-3);if(!b)return!1;const M=s.indexAfter(-3),g=r(b.contentMatchAt(M));if(!g||!b.canReplaceWith(M,M,g))return!1;const v=g.createAndFill();if(!v)return!1;const{tr:L}=e,T=s.after(-2);L.replaceWith(T,T,v);const H=L.doc.resolve(T),x=o.near(H,1);L.setSelection(x);const C=A,E=A+y.nodeSize;return L.delete(C,E),L.scrollIntoView(),i.dispatch(L),!0}}}});export{i as DetailsContent,i as default};
